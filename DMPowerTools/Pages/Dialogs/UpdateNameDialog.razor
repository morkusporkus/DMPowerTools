
<EditForm OnValidSubmit=OnValidSubmitAsync>
<MudDialog>
    <DialogContent>
        <MudTextField T="string" @bind="@newName" Label="Name"></MudTextField>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Success" Variant=Variant.Text StartIcon=@Icons.Outlined.Check ButtonType=ButtonType.Submit  FullWidth=true Size=Size.Large>
                <MudText>Save</MudText>
        </MudButton>
    </DialogActions>
</MudDialog>
</EditForm>
@code {
    @inject ApplicationDbContext DbContext;
    @inject IDialogService DialogService;
    @using DMPowerTools.Data;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private string newName;
    private Creature newCreature;
    public Creature DuplicateCreature;

    void Cancel() => MudDialog.Cancel();

    private async Task OnValidSubmitAsync()
    {
        if(newName.Trim()!= "" && newName.Trim() != newCreature.Name.Trim())
        {
            newCreature.Name = newName;
            DbContext.Creatures.Add(newCreature);
            await DbContext.SaveChangesAsync();
        }
        
    }
    public virtual void OnDialogOpened(DialogParameters parameters)
    {
       newCreature =  parameters.Get<Creature>("DuplicateCreature");
    }

}