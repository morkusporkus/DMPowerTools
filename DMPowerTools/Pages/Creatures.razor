
<MudGrid>
        <MudItem xs="12" sm="6" md="4">
        <MudAutocomplete T="string" Label="Creature" @bind-Value="@returnMonster" SearchFunc="@Filter" Variant="Variant.Outlined" Immediate="true" CoerceValue="@coerceValue" ResetValueOnEmptyText="true" />
    </MudItem>
</MudGrid>


@code {
    @page "/creatures"
    @using DMPowerTools.Data;

    @inject ApplicationDbContext DBContext;
    string returnMonster { get; set; }
    IEnumerable<Monster> creatures;

    private bool resetValueOnEmptyText;
    private bool coerceText;
    private bool coerceValue;
    private string value;

    protected override async Task OnInitializedAsync()
    {
        creatures = DBContext.Monsters.ToList();
    }

    private async Task<IEnumerable<string>> Filter(string value)
    {
        
        if (string.IsNullOrEmpty(value))
        {
            return creatures.Select(n => n.Name).ToList();
        }
        var lowerCaseSearchTerm = value.Trim().ToLower();
        return creatures.Select(n => n.Name).Where(p => p.ToLower().Contains(lowerCaseSearchTerm));
    }

}